version: '3'

services:
  teste-postgres-compose:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "Postgres2024!"
    ports:
      - "5432:5432"
    networks:
      - postgres-compose-network


  zookeeper:
      image: confluentinc/cp-zookeeper:7.0.1
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-setup:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - kafka
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for Kafka to be ready...' &&
      cub kafka-ready -b kafka:9092 1 20 &&
      echo 'Creating topic...' &&
      kafka-topics --create --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1 --topic refund-topic;
      echo 'Topic created successfully.'
      "
      
  prometheus:
    image: prom/prometheus:v2.31.1
    command: --config.file=/etc/prometheus/prometheus.yml --log.level=debug
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  
  grafana:
    image: grafana/grafana:8.2.3
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    user: '104'
    links:
      - prometheus
volumes:
  grafana-storage:

networks: 
  postgres-compose-network:
    driver: bridge